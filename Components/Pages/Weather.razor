@page "/weather"
@using WeatherTrendAnalyzer.WeatherForecast.Models.Weather
@using WeatherTrendAnalyzer.WeatherForecast.Services
@attribute [StreamRendering]
@inject WeatherForecastService WeatherForecastService
@inject CalculateWeatherService CalculateWeatherService

<PageTitle>Weather</PageTitle>

<h3 class="text-xl font-semibold mb-4 text-center">Väderprognos</h3>


<div class="container d-flex justify-content-center">
    <div class="w-100">
        <div class="mb-4">
            <div class="d-flex flex-column align-items-center gap-4">
                <div class="form-group w-50">
                    <input id="cityInput" type="text" class="form-control w-100" @bind="_cityName" placeholder="Skriv in stad..." style="text-align:center" />
                </div>

                <div class="form-group">
                    <label for="daysInput" class="font-weight-bold">Antal dagar (3–10):</label>
                    <input id="daysInput" type="number" class="form-control text-center" min="3" max="10" @bind="_forecastDays" />
                </div>

                <button class="btn btn-primary mt-2" @onclick="LoadWeatherForecastAsync">Hämta väder</button>
            </div>
        </div>
    </div>
</div>

@if (_hasSearched && string.IsNullOrEmpty(_cityName))
{
    <p class="text-red-500">Vänligen ange en stad innan du söker.</p>
}

@if (_isLoading)
{
    <p><em>Loading...</em></p>
}
else if (_weatherForecastResult != null)
{

    <div class="bg-white shadow rounded-lg p-4 mb-6">
        <h4 class="text-lg font-semibold mb-4">Genomsnittlig väderdata för de närmsta @_forecastDays dagarna</h4>
        <p><strong>Genomsnittlig temperatur:</strong> @_weatherForecastResult.AverageTemp.ToString("F1") @_weatherForecastResult.TemperatureUnit</p>
        <p><strong>Max temperatur:</strong> @_weatherForecastResult.MaxTemp @_weatherForecastResult.TemperatureUnit</p>
        <p><strong>Min temperatur:</strong> @_weatherForecastResult.MinTemp @_weatherForecastResult.TemperatureUnit</p>
        <p><strong>Totalt antal timmar med regn:</strong> @_weatherForecastResult.TotalRainHours </p>
    </div>

    <h4 class="text-lg font-semibold mb-2 mt-5">Daglig prognos för de närmsta @_forecastDays dagarna i staden @_cityName</h4>

    <div class="row">
        @foreach (var day in _weatherForecastResult.DailyForecast!)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@day.Date.ToString("yyyy-MM-dd")</h5>
                        <p><strong>Medeltemp:</strong> @day.AverageTemp.ToString("F1") @_weatherForecastResult.TemperatureUnit</p>
                        <p><strong>Max:</strong> @day.MaxTemperature @_weatherForecastResult.TemperatureUnit</p>
                        <p><strong>Min:</strong> @day.MinTemperature @_weatherForecastResult.TemperatureUnit</p>
                        <p><strong>Regniga timmar:</strong> @day.TotalRainDays</p>
                    </div>
                </div>
            </div>
        }
    </div>
}
@code {
    private WeatherForecastResult? _weatherForecastResult;

    private bool _isLoading;
    private bool _hasSearched = false;

    private int _forecastDays = 3; //Default
    private string _cityName = "";

    private async Task LoadWeatherForecastAsync()
    {
        _hasSearched = true;
        if (string.IsNullOrEmpty(_cityName))
        {
            return;
        }

        _isLoading = true;
        var location = await WeatherForecastService.GetCoordinatesForCityAsync(_cityName);
        var rawWeather = await WeatherForecastService.GetWeatherForecastAsync(_forecastDays, location.latitude, location.longitude, location.timezone);
        _weatherForecastResult = CalculateWeatherService.CalculateWeatherForecast(rawWeather);

        _isLoading = false;
    }
}
